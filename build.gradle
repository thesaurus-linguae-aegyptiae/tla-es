plugins {
    id 'war'
    id 'java'
    id 'jacoco'
    id 'application'
    id 'maven-publish'
    id 'co.uzzu.dotenv.gradle' version '1.1.0'
    id 'de.undercouch.download' version '4.1.1'
    id 'org.springframework.boot' version '2.4.0'
    id 'com.github.ben-manes.versions' version '0.36.0'
    id 'com.github.dawnwords.jacoco.badge' version '0.2.0'
}

group = 'org.bbaw.aaew.tla'
version = '0.0.826-SNAPSHOT'
sourceCompatibility = '11'

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'tla-elasticsearch'
            pom {
                name = 'TLA Elasticsearch Backend'
                description = 'Elasticsearch backend for the Thesaurus Linguae Aegyptiae web component'
            }
            from components.java
        }
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://jitpack.io' }
}

configurations {
    implementation.exclude module: 'spring-boot-starter-jetty'
    implementation.exclude module: 'spring-boot-starter-netty'
    implementation.exclude group: 'jakarta.xml.bind'
    implementation.exclude group: 'org.xmlunit'
    implementation.exclude group: 'org.skyscreamer'
    implementation.exclude module: 'jackson-dataformat-smile'
    // ES transport client stuff
    implementation.exclude module: 'transport'
    implementation.exclude module: 'transport-netty4-client'
    testImplementation.exclude module: 'junit-vintage-engine'
    testImplementation.exclude group: 'org.junit.vintage'
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    implementation 'com.github.jkatzwinkel:tla-common:query-expansion-SNAPSHOT'
    implementation 'org.modelmapper:modelmapper:2.3.9'
    implementation 'org.apache.commons:commons-compress:1.20'
    implementation 'org.apache.tomcat.embed:tomcat-embed-core:9.0.35'
    implementation 'org.yaml:snakeyaml:1.27'

    implementation 'org.springframework.data:spring-data-elasticsearch:4.1.1'
    implementation 'org.springframework.boot:spring-boot:2.4.0'
    implementation 'org.springframework.boot:spring-boot-autoconfigure:2.4.0'
    implementation 'org.springframework:spring-web:5.3.1'
    implementation 'org.springframework:spring-webmvc:5.3.1'
    implementation 'org.slf4j:slf4j-simple:2.0.0-alpha1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.4.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

application {
    mainClass = 'tla.backend.App'
}

test {
    useJUnitPlatform()
    environment "ES_PORT", env.fetch("ES_PORT", "9200")
    finalizedBy 'jacocoTestReport'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    finalizedBy 'generateJacocoBadge'
}

bootRun {
    if (project.hasProperty('args')) {
        args project.args.split(',')
    }
    environment "ES_PORT", env.fetch("ES_PORT", "9200")
    environment "ES_HOST", env.fetch("ES_HOST", "localhost")
}

task downloadSample(type: Download) {
    group = 'Init'
    description = 'Download corpus sample file'
    src env.fetch("SAMPLE_URL", "http://")
    dest new File('sample.tar.gz')
    onlyIfModified true
    outputs.files(
        file("sample.tar.gz")
    )
}

clean {
    dependsOn 'cleanDownloadSample'
}

task populate {
    group = 'Init'
    description = 'Download corpus sample and ingest into database backend'
    doLast {
        bootRun.args = ['--data-file=sample.tar.gz', '--shutdown']
    }
    dependsOn 'downloadSample'
    finalizedBy 'bootRun'
}
