[
  {
    "name": "colon ('.') should not be ignored, 'sn.t' should be found, but not 'sr.t'",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "sn.t"
    },
    "valid": [
      "136260",
	  "136300"
    ],
    "invalid": [
	  "d5390"
    ]
  },
  {
    "name": "parenthesis ('()') ignored, '(j)mn' should find 'jmn', but not 'j'",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "(j)mn"
    },
    "valid": [
      "26020"
    ],
    "invalid": [
      "500024"
    ]
  },
  {
    "name": "parenthesis ('()') should be understood as option marker, '(j)mn' should find 'mn'",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "(j)mn"
    },
    "valid": [
      "69720"
    ]
  },
  {
    "name": "question mark '?' should be understood as option marker, 'j?mn' should find 'mn' and 'jmn'",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "j?mn"
    },
    "valid": [
      "26020",
      "69600"
   ],
    "invalid": [
      "70720"
   ]
  },
  {
    "name": "question marks ('⸮?') in lemma should be ignored, 'Pa-tꜣ-gš' should find (unsplit) 'Pa-⸮tꜣ?-gš'",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "Pa-tꜣ-gš"
    },
    "valid": [
      "dm5732"
    ]
  },
  {
    "name": "square brackets ('[ ]') should be understood as char set marker, 'j[fw]n' should find 'jwn' and 'jfn'",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "j[fw]n"
    },
    "valid": [
      "22590",
      "24540"
    ]
  },
  {
    "name": "forward slash ('/') shouldn't be ignored, '1/2' should be found",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "1/2"
    },
    "valid": [
      "99026"
    ],
    "invalid": [
      "600014",
      "600017"
    ]
  },
  {
    "name": "hyphen ('-') should not be used by tokenizer, unsplit lemma 'zp-nfr' should be found",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "zp-nfr"
    },
    "valid": [
      "132560"
    ],
    "invalid": [
      "136212",
      "859569"
    ]
  },
  {
    "name": "hyphen ('-') should not be used by tokenizer, split lemma 'ḥm-nṯr' should be found",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "ḥm-nṯr"
    },
    "valid": [
      "104940",
	  "852742"
    ]
  },
  {
    "name": "search for 'ḥm-nṯr' should not find 'ḥm-ntr' (MdC mistake)",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "ḥm-nṯr"
    },
    "invalid": [
      "d4073"
    ]
  },
  {
    "name": "underscore ('_') should not be ignored, '_rw' should be found, but not 'rw'",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "_rw"
    },
    "valid": [
      "dm4228"
    ],
    "invalid": [
      "93390"
    ]
  },
  {
    "name": "plus sign ('+') in query/lemma should not be ignored, '1000+' should be found, but not '1000'",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "1000+"
    },
    "valid": [
      "dm5964"
    ],
    "invalid": [
      "dm879"
    ]
  },
  {
    "name": "plus sign ('+') in query/lemma should not be ignored, individual '+' should find '1...n + 1/ 2...1/n', but not those with '+' only in lemma word tokens",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "+"
    },
    "valid": [
      "600569"
    ],
    "invalid": [
      "dm879",
	  "880949"
    ]
  },
  {
    "name": "asterisk ('*') in lemma should be ignored, 'ꜥpš' should find 'ꜥpš' and '*ꜥpš'",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "ꜥpš"
    },
    "valid": [
      "dm4619",
      "37210",
      "866669"
	  ]
  },
  {
    "name": "sterisk ('*') in querry should be understood as wildcard, 'j*n' should find 'jwn' and 'jfn'",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "j*n"
    },
    "valid": [
      "22590",
      "24540"
	  ]
  },
  {
    "name": "paragraph sign ('§') in querry should be understood as wildcard, 'j*n' should find 'jwn' and 'jfn'",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "j§n"
    },
    "valid": [
      "22590",
      "24540"
	  ]
  },
  {
    "name": "question mark ('(?)') in lemma should be ignored, 'rwḏ$' should find 'rwḏ(?)-nj'",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "rwḏ$"
    },
    "valid": [
      "704143"
   ]
  },
  {
    "name": "search for two words be understood as AND, 'jr sḫr' shoud find 'jri̯ (sḫr.w)'",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "jr sḫr"
    },
    "valid": [
      "29380"
   ]
  },
  {
    "name": "'$' as word end marker, 'mn$' should not find 'mnmn'",
    "cmd": {
      "@class": "tla.domain.command.LemmaSearch",
      "transcription": "mn$"
    },
    "valid": [
      "69600"
   ],
    "invalid": [
      "70720"
   ]
  }
]

